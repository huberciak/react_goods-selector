{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","clearGood","setState","selectGood","good","mapCallback","buttonTag","className","classNames","type","onClick","this","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,O,EAGhBC,UAAY,WACV,EAAKC,SAAS,CAAEF,aAAc,M,EAGhCG,WAAa,SAACC,GAGZ,OAFmB,EAAKL,MAAMC,eAAiBI,EAG3C,EAAKH,YACL,EAAKC,SAAS,CAAEF,aAAcI,K,EAGpCC,YAAc,SAACD,GACb,IACME,EADa,EAAKP,MAAMC,eAAiBI,EAChB,SAAW,SAE1C,OACE,qBACEG,UAAWC,IACT,aACA,CACE,uBAAwB,EAAKT,MAAMC,eAAiBI,IAJ1D,UASGA,EACD,8BACE,wBACEK,KAAK,SACLF,UAAU,sBACVG,QAAS,kBAAM,EAAKP,WAAWC,IAHjC,SAKGE,QATAF,I,4CAgBX,WAAU,IAAD,OACCJ,EAAiBW,KAAKZ,MAAtBC,aAER,OACE,sBAAKO,UAAU,MAAf,UACGP,EAEG,oBAAIO,UAAU,SAAd,mBACMP,EADN,kBAIA,oBAAIO,UAAU,SAAd,+BACJ,8BACE,wBACEE,KAAK,SACLF,UAAWC,IACT,iBACA,SACA,CACE,wBAA0C,KAAjBR,IAG7BU,QAAS,kBAAM,EAAKT,aATtB,qBAcF,oBAAIM,UAAU,OAAd,SACGV,EAAgBe,IAAID,KAAKN,sB,GAzElBQ,IAAMC,WA+EThB,ICjGfiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.84fe1db2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  clearGood = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  selectGood = (good: string) => {\n    const isSelected = this.state.selectedGood === good;\n\n    return isSelected\n      ? this.clearGood()\n      : this.setState({ selectedGood: good });\n  };\n\n  mapCallback = (good: string) => {\n    const isSelected = this.state.selectedGood === good;\n    const buttonTag = isSelected ? 'Remove' : 'Select';\n\n    return (\n      <li\n        className={classNames(\n          'list__item',\n          {\n            'list__item--selected': this.state.selectedGood === good,\n          },\n        )}\n        key={good}\n      >\n        {good}\n        <div>\n          <button\n            type=\"button\"\n            className=\"button button__good\"\n            onClick={() => this.selectGood(good)}\n          >\n            {buttonTag}\n          </button>\n        </div>\n      </li>\n    );\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        {selectedGood\n          ? (\n            <h1 className=\"header\">\n              {`${selectedGood} is selected`}\n            </h1>\n          )\n          : <h1 className=\"header\">No goods selected</h1>}\n        <div>\n          <button\n            type=\"button\"\n            className={classNames(\n              'button__header',\n              'button',\n              {\n                'button__header--clear': selectedGood !== '',\n              },\n            )}\n            onClick={() => this.clearGood()}\n          >\n            Clear\n          </button>\n        </div>\n        <ul className=\"list\">\n          {goodsFromServer.map(this.mapCallback)}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}